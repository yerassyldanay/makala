// Code generated by MockGen. DO NOT EDIT.
// Source: ./provider/poststore/querier.go

// Package mock_poststore is a generated GoMock package.
package mock_poststore

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	poststore "github.com/yerassyldanay/makala/provider/poststore"
)

// MockQuerier is a mock of Querier interface.
type MockQuerier struct {
	ctrl     *gomock.Controller
	recorder *MockQuerierMockRecorder
}

// MockQuerierMockRecorder is the mock recorder for MockQuerier.
type MockQuerierMockRecorder struct {
	mock *MockQuerier
}

// NewMockQuerier creates a new mock instance.
func NewMockQuerier(ctrl *gomock.Controller) *MockQuerier {
	mock := &MockQuerier{ctrl: ctrl}
	mock.recorder = &MockQuerierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQuerier) EXPECT() *MockQuerierMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockQuerier) Create(ctx context.Context, arg poststore.CreateParams) (poststore.FeedPost, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, arg)
	ret0, _ := ret[0].(poststore.FeedPost)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockQuerierMockRecorder) Create(ctx, arg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockQuerier)(nil).Create), ctx, arg)
}

// GetAll mocks base method.
func (m *MockQuerier) GetAll(ctx context.Context, arg poststore.GetAllParams) ([]poststore.FeedPost, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", ctx, arg)
	ret0, _ := ret[0].([]poststore.FeedPost)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockQuerierMockRecorder) GetAll(ctx, arg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockQuerier)(nil).GetAll), ctx, arg)
}

// GetByIds mocks base method.
func (m *MockQuerier) GetByIds(ctx context.Context, dollar_1 []int64) ([]poststore.FeedPost, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByIds", ctx, dollar_1)
	ret0, _ := ret[0].([]poststore.FeedPost)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByIds indicates an expected call of GetByIds.
func (mr *MockQuerierMockRecorder) GetByIds(ctx, dollar_1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByIds", reflect.TypeOf((*MockQuerier)(nil).GetByIds), ctx, dollar_1)
}
